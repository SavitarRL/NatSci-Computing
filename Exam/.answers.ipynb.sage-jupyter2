{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-eccee10f-e2ec-44e2-80af-9e5c05ed3079.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"69a7d2","input":"","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"552f34","input":"Q1()","output":{"0":{"data":{"image/png":"a3ca29c05bdbcbbfd61d53973c678fb35c2cde76","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":17,"metadata":{"image/png":{"height":126,"width":322},"needs_background":"light"},"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"05ad12","input":"draw_sequence(\"F-F++F-F\", 60)","output":{"0":{"data":{"image/png":"8dca3156f45dc88839c1bf99c121d876e6bf0aa0","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":18,"metadata":{"image/png":{"height":111,"width":322},"needs_background":"light"},"output_type":"execute_result"}},"pos":5,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"8e9561","input":"test_apply_koch_rule()","output":{"0":{"name":"stdout","output_type":"stream","text":"XF-F++F-FAF-F++F-F apply koch rule pass\n"}},"pos":7,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"112fc3","input":"Q4()","output":{"0":{"data":{"image/png":"b9e5781940ee8c4c0fec68f34c672e2abe2cb149","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":20,"metadata":{"image/png":{"height":74,"width":331},"needs_background":"light"},"output_type":"execute_result"},"1":{"data":{"image/png":"9784e4ba851542b3827cce279f81c594fe0ce24d","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":20,"metadata":{"image/png":{"height":126,"width":322},"needs_background":"light"},"output_type":"execute_result"},"2":{"data":{"image/png":"ee6215953b8f553975ef6777ed42adfd2aa5492a","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":20,"metadata":{"image/png":{"height":126,"width":306},"needs_background":"light"},"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"b46620","input":"test_apply_hilbert_rules()\nQ5(\"X\", 3) \nQ5(\"Y\", 3) ","output":{"0":{"name":"stdout","output_type":"stream","text":"-YF+XFX+FY-+XF-YFY-FX+ apply_hilbert_rules pass\n"},"1":{"data":{"image/png":"203d5b053a174aa5770e72fde54f745e046c8c6d","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":21,"metadata":{"image/png":{"height":318,"width":309},"needs_background":"light"},"output_type":"execute_result"},"2":{"data":{"image/png":"000efb5f8bcd06b0e9e5ebf4f976fadb4800952a","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":21,"metadata":{"image/png":{"height":318,"width":309},"needs_background":"light"},"output_type":"execute_result"},"3":{"data":{"image/png":"0923e9d0ce04de2fc4597241e5b0ac40a46d15e1","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":21,"metadata":{"image/png":{"height":318,"width":299},"needs_background":"light"},"output_type":"execute_result"},"4":{"data":{"image/png":"512e2386baf6a36a84573e375e1022c125f93bf9","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":21,"metadata":{"image/png":{"height":318,"width":317},"needs_background":"light"},"output_type":"execute_result"},"5":{"data":{"image/png":"08de02853589c973852e4b19aed47cda9c73c63a","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":21,"metadata":{"image/png":{"height":318,"width":317},"needs_background":"light"},"output_type":"execute_result"},"6":{"data":{"image/png":"88fa9f90e29e71d48b30f77ef51541aad454411a","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":21,"metadata":{"image/png":{"height":318,"width":307},"needs_background":"light"},"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"162533","input":"test_apply_rules()","output":{"0":{"name":"stdout","output_type":"stream","text":"ABBA XYXZ pass apply rules\n\n"}},"pos":13,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"74eb3e","input":" Q7()","output":{"0":{"data":{"image/png":"94d512e12d1f1b5dcbfae21fb73876f9db7e3ca4","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":23,"metadata":{"image/png":{"height":126,"width":313},"needs_background":"light"},"output_type":"execute_result"},"1":{"data":{"image/png":"a2dc4e9b4c07c657a9d353a11887a353559040de","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":23,"metadata":{"image/png":{"height":318,"width":311},"needs_background":"light"},"output_type":"execute_result"},"2":{"data":{"image/png":"48f0bcd0d63dae724c1fd2339ddf13916e5fe1ca","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":23,"metadata":{"image/png":{"height":318,"width":314},"needs_background":"light"},"output_type":"execute_result"},"3":{"data":{"image/png":"f2a097306876a1aba192b3a9a09b8da5150afc4d","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":23,"metadata":{"image/png":{"height":272,"width":321},"needs_background":"light"},"output_type":"execute_result"},"4":{"data":{"image/png":"77dcaf6ebeae4edb16f69be94e5edfaf16226b72","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":23,"metadata":{"image/png":{"height":318,"width":306},"needs_background":"light"},"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"728dcf","input":"import matplotlib.pyplot as plt\nimport numpy as np\nimport csv\n\n#Q1\ndef start(theta):\n    state[0] = 0\n    state[1] = 0\n    state[2] = 0\n    state[3] = theta\n    fig = plt.figure(figsize=(5,5))\n    ax = fig.add_subplot(111)\n    ax.set_aspect('equal', adjustable='box')\n    \ndef draw_forward():\n    x = state[0]\n    y = state[1]\n    angle = state[2]\n    state[0] = x + np.cos(angle)\n    state[1] = y + np.sin(angle)\n    plt.plot([x, state[0]], [y, state[1]], color=\"black\",\n    linewidth=2)\n    \ndef rotate_left():\n    theta = state[3]\n    state[2] = state[2] + theta * np.pi / 180\n    \ndef rotate_right():\n    theta = state[3]\n    state[2] =  state[2] - theta * np.pi / 180\n\n\nstate = [0, 0, 0, 0]\n# Example: draw an L\n\ndef Q1():\n    start(60)\n    draw_forward()\n    rotate_left()\n    draw_forward()\n    rotate_right() ; rotate_right()\n    draw_forward()\n    rotate_left()\n    draw_forward()\n    plt.title(\"Question 1\")\n\n    \n#Q2\ndef draw_sequence(seq, angle):\n    start(angle)\n    for elem in seq:\n        if elem == \"F\":\n            draw_forward()\n        elif elem == \"+\":\n            rotate_right()\n        elif elem == \"-\":\n            rotate_left()\n        else:\n            continue\n\n#Q3\ndef apply_koch_rule(seq):\n    return seq.replace(\"F\", \"F-F++F-F\")\n\n\ndef test_apply_koch_rule():\n    s = apply_koch_rule(\"XFAF\")\n    assert(s ==\"XF-F++F-FAF-F++F-F\"), \"{}: apply koch rule fail\".format(s)\n    print(s, \"apply koch rule pass\")\n\n#Q4\ndef draw_koch_curve(seq, times):\n    for i in range(times):\n        seq = apply_koch_rule(seq)\n    draw_sequence(seq, 60)\n\n\ndef Q4():\n    #draw iterations of 0 1 2 of Koch Curve\n    seq = \"F\"\n    num = [i for i in range(3)]\n    for i in range(0,3):\n        draw_koch_curve(seq, i)\n        plt.title(\"Koch Curve Iteration \" + str(i) )\n\n\n#Q5\ndef apply_hilbert_rules(seq):\n    ret_s = \"\"\n    for elem in seq:\n        if elem == \"X\":\n            c1 = elem.replace(\"X\", \"-YF+XFX+FY-\")\n            ret_s = ret_s + c1\n        elif elem == \"Y\":\n            c2 = elem.replace(\"Y\", \"+XF-YFY-FX+\")\n            ret_s = ret_s + c2\n        else:\n            ret_s = ret_s + elem\n    return ret_s\n\n        \ndef test_apply_hilbert_rules():\n    s = apply_hilbert_rules(\"XY\")\n    assert(s == \"-YF+XFX+FY-+XF-YFY-FX+\"), \"{}: Failed apply_hilbert_rules\".format(s)\n    print(s, \"apply_hilbert_rules pass\")\n\ndef draw_hilbert_curve(seq, times):\n    for i in range(times):\n        seq = apply_hilbert_rules(seq)\n    draw_sequence(seq, 90)\n#     print(seq)\n    \ndef Q5(seq, times):\n    # Draw iterations 1, 2 and 3 of the Hilbert curve\n    for i in range(1,times+1):\n        draw_hilbert_curve(seq, i)\n        plt.title(\"Hilbert Cruve with axiom \\\"\" + str(seq) + \"\\\" Iteration \" + str(i))\n\n\n#Q6\ndef apply_rules(seq, rule_list):\n    rule_dict = {}\n    for rules in rule_list:\n        rule = rules.split(\"->\")\n        initial = rule[0]\n        final = rule[1]\n        rule_dict[initial] = final\n#     print(rule_dict)\n    ret_seq = \"\"\n    for elem in seq:\n        if elem in rule_dict.keys():\n            change = elem.replace(elem, rule_dict[elem])\n            ret_seq = ret_seq + change\n        else:\n            ret_seq = ret_seq + elem\n    return ret_seq\n\ndef test_apply_rules():\n    s1 = apply_rules(\"AB\", [\"A->AB\", \"B->BA\"])\n    s2 = apply_rules(\"AB\", [\"A->XY\", \"B->XZ\"])\n    assert(s1 == \"ABBA\" and s2 == \"XYXZ\"), \"apply rules failed\"\n    print(s1, s2, \"pass apply rules\\n\")\n\n\n#Q7\ndef getData():\n    with open(\"lsysdata.txt\") as f:\n        b = csv.reader(f)\n        next(b)\n        line = [i for i in b]\n        name = [str(row[0]) for row in line]\n        iteration = [int(row[1]) for row in line]\n        angle = [int(row[2]) for row in line]\n        axiom = [str(row[3]) for row in line]\n        rules = [list(row[4:]) for row in line]\n#     print(\"Name: {} \\n iteration: {}\\n Angle: {}\\n axiom: {} \\n rules: {}\\n\".format(name, iteration, angle, axiom,rules))\n    return name, iteration, angle, axiom, rules\n        \n\ndef draw_l_system(title, axiom, theta, rule_list, n):\n    seq = axiom\n    for i in range(n):\n        seq = apply_rules(seq, rule_list)\n#     print(seq)\n    draw_sequence(seq, theta)\n    plt.title(title)\n    \ndef Q7():\n    data = getData()\n    name = data[0]\n    iteration = data[1]\n    angle = data[2]\n    axiom = data[3]\n    rules = data[4]\n#     print(rules)\n    for i in range(len(name)):\n        draw_l_system(name[i], axiom[i], angle[i], rules[i], iteration[i])\n\n# def test():\n#     Q1() #q1 \n#     draw_sequence(\"F-F++F-F\", 60) #q2 \n#     test_apply_koch_rule() #q3 \n#     Q4() #q4 ok\n#     test_apply_hilbert_rules() #q5 \n#     Q5(\"X\", 3) #q5 \n#     Q5(\"Y\", 3) #q5\n#     test_apply_rules() #q6 ok\n\ndef main():\n    Q7() #q7\n    \n\nif __name__ == \"__main__\":\n#     test()\n    main()\n    ","output":{"0":{"data":{"image/png":"94d512e12d1f1b5dcbfae21fb73876f9db7e3ca4","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":24,"metadata":{"image/png":{"height":126,"width":313},"needs_background":"light"},"output_type":"execute_result"},"1":{"data":{"image/png":"a2dc4e9b4c07c657a9d353a11887a353559040de","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":24,"metadata":{"image/png":{"height":318,"width":311},"needs_background":"light"},"output_type":"execute_result"},"2":{"data":{"image/png":"48f0bcd0d63dae724c1fd2339ddf13916e5fe1ca","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":24,"metadata":{"image/png":{"height":318,"width":314},"needs_background":"light"},"output_type":"execute_result"},"3":{"data":{"image/png":"f2a097306876a1aba192b3a9a09b8da5150afc4d","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":24,"metadata":{"image/png":{"height":272,"width":321},"needs_background":"light"},"output_type":"execute_result"},"4":{"data":{"image/png":"77dcaf6ebeae4edb16f69be94e5edfaf16226b72","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":24,"metadata":{"image/png":{"height":318,"width":306},"needs_background":"light"},"output_type":"execute_result"}},"pos":1,"type":"cell"}
{"cell_type":"markdown","id":"03f9ee","input":"Question 3","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"14f80a","input":"Question 7","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"1956d1","input":"Question 6\n","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"2c2797","input":"# NSCI0007 Exam\n## Answers","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"36e6c8","input":"Question 5","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"ad185e","input":"Question 4","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"befc9c","input":"Question 2","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"c262fb","input":"Question 1","pos":2,"type":"cell"}
{"id":0,"time":1613560387467,"type":"user"}
{"last_load":1613560386659,"type":"file"}