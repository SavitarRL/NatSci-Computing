{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-a7498e1b-3e4e-4fc0-bc68-e3009414e45e.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"cd14d1","input":"","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cd60df","input":"input_string = \"Python Is Better Than MATLAB\"","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"e51700","input":"# input_str = \"hannah\"\n# output = 6\n\n# input_str = \"123abba123\"\n# output = 4\n\n# input_str = \"545abba123\"\n# output = 4\n\n# input_str = \"abcde\"\n# output = 1","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"672cba","input":"input_str = \"according to all known laws of aviation, there is no way a bee should be able to fly. its wings are too small to get its fat little body off the ground. the bee, of course, flies anyway because bees don't care what humans think is impossible\"\nkey = 7\n\nalphabet =[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\noutput_str = \"\"\nfor i in range(len(input_str)):\n    for i2 in range(len(alphabet)):\n        if input_str[i] == alphabet[i2]:\n            if i2 < (26 - key):\n                output_str = output_str + alphabet[i2 + key]\n            elif i2 > (25 - key):\n                output_str = output_str + alphabet[i2 + key - 26]\n            else:\n                continue\n        elif input_str[i] == alphabet[i2].capitalize:\n            if i2 < (26 - key):\n                output_str = output_str + alphabet[i2 + key].capitalize()\n            elif i2 > (25 - key):\n                output_str = output_str + alphabet[i2 + key - 26].capitalize()\n            else:\n                continue\n        elif input_str[i] == \" \" or input_str[i] == \",\" or input_str[i] == \".\":\n            output_str = output_str + input_str[i]\n            break\n        else:\n            continue\nprint(output_str)","output":{"0":{"name":"stdout","output_type":"stream","text":"hjjvykpun av hss ruvdu shdz vm hcphapvu, aolyl pz uv dhf h ill zovbsk il hisl av msf. paz dpunz hyl avv zthss av nla paz mha spaasl ivkf vmm aol nyvbuk. aol ill, vm jvbyzl, msplz hufdhf iljhbzl illz kvua jhyl doha obthuz aopur pz ptwvzzpisl\n"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"a3fc15","input":"input_str = \"hjjvykpun av hss ruvdu shdz vm hcphapvu, aolyl pz uv dhf h ill zovbsk il hisl av msf. paz dpunz hyl avv zthss av nla paz mha spaasl ivkf vmm aol nyvbuk. aol ill, vm jvbyzl, msplz hufdhf iljhbzl illz kvua jhyl doha obthuz aopur pz ptwvzzpisl\"\nkey = 7\n\nalphabet =[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\noutput_str = \"\"\nfor i in range(len(input_str)):\n    for i2 in range(len(alphabet)):\n        if input_str[i] == alphabet[i2]:\n            if i2 < key:\n                output_str = output_str + alphabet[i2 - key + 26]\n            elif i2 > (key - 1):\n                output_str = output_str + alphabet[i2 - key]\n            else:\n                continue\n        elif input_str[i] == alphabet[i2].capitalize():\n            if i2 < key:\n                output_str = output_str + alphabet[i2 - key + 26].capitalize\n            elif i2 > (key - 1):\n                output_str = output_str + alphabet[i2 - key].capitalize\n            else:\n                continue\n        elif input_str[i] == \" \" or input_str[i] == \",\" or input_str[i] == \".\":\n            output_str = output_str + input_str[i]\n            break\n        else:\n            continue\nprint(output_str)","output":{"0":{"name":"stdout","output_type":"stream","text":"according to all known laws of aviation, there is no way a bee should be able to fly. its wings are too small to get its fat little body off the ground. the bee, of course, flies anyway because bees dont care what humans think is impossible\n"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"cc84ba","input":"#Part A\n\ndef check_palindrome(string):\n    if len(string)%2 ==0:\n        midpt = int(len(string)/2)\n        for i in range(0,midpt):\n            half1 = string[i:midpt]\n            rev = string[:midpt-1:-1]\n#             print(half1)\n#             print(rev)\n            if  half1 == rev:\n                return True\n            else:\n                return False\n    else:\n        return \"Length of the word is an odd number\"\n\ninput_str1 = \"hannah\"\nprint(check_palindrome(input_str1))\n\ninput_str2 = \"123abba123\"\nprint(check_palindrome(input_str2))\n\ninput_str3 = \"545abba123\"\nprint(check_palindrome(input_str3))\n\ninput_str4 = \"abcde\"\nprint(check_palindrome(input_str4))","output":{"0":{"name":"stdout","output_type":"stream","text":"True\nFalse\nFalse\nLength of the word is an odd number\n"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"f3479f","input":"input_string = \"Python Is Better Than MATLAB\"\nalphabet =[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\nlowercase = []\ncapital = []\noutput = \"\"\n\nfor i in range(len(input_string)):\n    for i2 in range(len(alphabet)):\n        if input_string[i] == alphabet[i2].capitalize():\n            capital.append(input_string[i])\n        elif input_string[i] == alphabet[i2]:\n            lowercase.append(input_string[i])\n        elif input_string[i] == \" \":\n            lowercase.append(input_string[i])\n            break\n        else:\n            continue\nfor i in range(len(lowercase)):\n    output = output + lowercase[i]\nfor i in range(len(capital)):\n    output = output + capital[i]\n\nprint(output)","output":{"0":{"name":"stdout","output_type":"stream","text":"ython s etter han PIBTMATLAB\n"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"98b10f","input":"str1 = \"English = 78 Science = 83 Math = 68 History = 65\"\nwords = str1.split()\nnumlist =[]\nfor elem in words:\n    if elem.isdigit() is True:\n        numlist.append(int(elem))\nprint(\"sm = {}\".format(sum(numlist)))\nprint(\"av = {}\".format(sum(numlist)/len(numlist)))\n# sm = 294\n# av = 73.5\n#OK","output":{"0":{"name":"stdout","output_type":"stream","text":"sm = 294\nav = 73.5\n"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":88,"id":"eb856a","input":"#Part B\ndef longest_substring(string):\n    midpt = int(len(string)/2)\n    if check_palindrome(string) is True:\n#       print(string)\n        return len(string)\n    else:\n        if len(string)%2 ==0:\n            for i in range(0,midpt):\n                half1 = string[i:midpt]\n                rev = string[midpt:i:-1]\n#                 print(half1)\n#                 print(rev)\n                if half1 != rev:\n                    continue\n                else:\n                    return i\n        else:\n            return 1\nstr1 = \"hannah\"\nprint(\"Output = {}\".format(longest_substring(str1)))\n\nstr2 = \"123abba123\"\nprint(\"Output = {}\".format(longest_substring(str2)))\n\nstr3 = \"5455abba7123\"\nprint(\"Output = {}\".format(longest_substring(str3)))\n\nstr4 = \"abcde\"\nprint(\"Output = {}\".format(longest_substring(str4)))\nstr5 = \"123456hannah654321\"\nprint(\"Output = {}\".format(longest_substring(str5)))\nstr6 = \"4567hannah4567\"\nprint(\"Output = {}\".format(longest_substring(str6)))","output":{"0":{"name":"stdout","output_type":"stream","text":"Output = 6\nOutput = 4\nOutput = 5\nOutput = 1\nOutput = 18\nOutput = 6\n"}},"pos":13,"type":"cell"}
{"cell_type":"markdown","id":"13082e","input":"# Tutorial 5 - challenge","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"2bc427","input":"Write a program to calculate the sum and average of all numbers within a given string.","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"3186bb","input":"Write a program that rearranges a string such that all the lowercase letters come first. Consider a space to be lowercase.\n\nFor example, given:","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"36b877","input":"## Question 1\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"4e76c6","input":"## Question 3","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"67c1ea","input":"# Question 4","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"6d86f1","input":"b) Write a program that, given a key and an input string, will decode the input string using the ceasar cypher","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"6e0b37","input":"a) Write a program that, given a key and an input string, will encode the input string using the ceasar cypher","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"767160","input":"In cryptography, a Caesar cipher, also known as Caesar's cipher, the shift cipher, Caesar's code or Caesar shift, is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet. For example, with a key of 3, A would be replaced by D, B would become E, and so on. The method is named after Julius Caesar, who used it in his private correspondence.","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"865ab1","input":"## Question 2","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"9ace03","input":"The output should be:","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"9fd11a","input":"b) using your answer to part a), write a program that takes an input string and finds the length of the longest substring that is a palindrome.\n","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"c99a8d","input":"A palindromic string remains the same when its digits are reversed, for example \"hannah\" is a palindrome.\n\na) Write a program that checks whether a given string is a palindrome without using inbuilt functions to reverse the string.\n\nAn Algorithm to do this is the following:\n\n- Loop from 0 to len(string)/2 and for each index\n    - Check if the character at index is the same as the character at len(string) - index\n        - If they are not equal the string is not a palindrome\n- If all the checked characters are equal the string is a palindrome","pos":10,"type":"cell"}
{"id":0,"time":1610707053188,"type":"user"}
{"last_load":1610707052532,"type":"file"}