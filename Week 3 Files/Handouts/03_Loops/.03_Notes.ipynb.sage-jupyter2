{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-652aa5d6-3f7b-4ac9-aa49-89af360eda8f.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":82497536},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"90cfd9","input":"pop = 10 # initial population\nyear = 0 # initial year\nwhile pop < 1000: # repeat the following statements while pop is less than 1000\n    year = year + 1 # update the year \n    pop = pop * 2 # update the population\nprint(\"Number of years:\", year)","output":{"0":{"name":"stdout","output_type":"stream","text":"Number of years: 7\n"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"dd3259","input":"for i in range(5):\n    for j in range(4):\n        print(i, j, end=\"\")\n    print()","output":{"0":{"name":"stdout","output_type":"stream","text":"0 00 10 20 3\n1 01 11 21 3\n2 02 12 22 3\n3 03 13 23 3\n4 04 14 24 3\n"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"7dcaf9","input":"text = \"We can use this to count characters in a string. For example, how many w's are there in this sentence?\"\n\ncounter = 0 # Set the counter to zero\nfor c in text: # Loop over each character in the text\n    if c == \"w\": # Check if the character is \"w\"\n        counter = counter + 1 # If so, increase the counter\n        \nprint(\"Number of w's:\", counter)","output":{"0":{"name":"stdout","output_type":"stream","text":"Number of w's: 2\n"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"5bc8ae","input":"for i in range(5, 10):\n    print(\"i =\", i)","output":{"0":{"name":"stdout","output_type":"stream","text":"i = 5\ni = 6\ni = 7\ni = 8\ni = 9\n"}},"pos":5,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"85b095","input":"for i in range(1, 10, 2):\n    print(\"i =\", i)","output":{"0":{"name":"stdout","output_type":"stream","text":"i = 1\ni = 3\ni = 5\ni = 7\ni = 9\n"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"f45873","input":"for i in range(5):\n    print(\"i =\", i)","output":{"0":{"name":"stdout","output_type":"stream","text":"i = 0\ni = 1\ni = 2\ni = 3\ni = 4\n"}},"pos":9,"type":"cell"}
{"cell_type":"markdown","id":"08aa8d","input":"### Nested Loops\nFor loops may be **nested** by placing one inside another. The following example repeats in the inner loop 4 times for each of the out loop, resulting in a total of 20 iterations,.","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"11819b","input":"---\n**NOTES**  \n- The loop variable `i` is updated each loop iteration\n- The for statement is terminated by a colon (`:`)\n- The indented lines below the `for` statement are executed once for each integer specified by the `range` function\n- The range function *includes* the lower limit but *excludes* the upper limit\n---","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"24f042","input":"You can use the range function with a single argument, in which case the range of values starts at zero:","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"2ced8c","input":"# Tutorial 3: Loops\n\nA **loop** is a sequence of instructions which is executed repeatedly until a goal has been reached.\n\n## While Loops\n\nSuppose a population of a species doubles every year. If the initial population is 10, how many years does it take to reach 1000?\n\n- *Start with a year value of 0 and population of 10.*  \n- *Repeat the following steps while the population is less than 1000*:\n  - *Add 1 to the year*  \n  - *Double the value of the population*  \n- *Print out the final year value*\n\nIn Python we use a `while` statement to repeat a sequence of statements while a specific condition is satisfied.","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"6905af","input":"The `range` function specifies the sequence of integer values that the loop variable will take. `range(a, b)` generates a sequence starting at `a` and ending at `b - 1`.  \nTo generate a sequence with a different step size, pass a third argument to the `range` function:","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"6d5159","input":"---\n**Relational Operators**  \nThe less-than operator `<` is a **relational operator**. It compares two expressions and evaluates to `true` if the expression on the left is less than the expression on the right. Other relational operators include the equality operator `==` which evaluates to `true` if the expression on the left is equal to the expression on the right. Relational operators can be used in `if` statements or `while` loops.\n\n|Symbol|Operator|\n|---|---|\n|<|less than|\n|<=|less than or equal|\n|>|greater than|\n|>=|greater than or equal|\n|==|equals|\n|!=|does not equal|\n\n---","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"6fb7a9","input":"### String Iteration\nA for loop can be used to iterate over any container data type. Container data types include lists, which will be introduced next week, as well as strings, we will be explored further the following week. For now, just note that a string consists of a sequence of characters, and therefore it is possible to iterate over it using a for loop.  \n\nWe can use this to count characters in a string. For example, how many w's are there in this sentence?","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"7e8674","input":"## For Loops\n\nA `for` loop is used to iterate over a sequence of elements. The simplest form of the `for` statement is to iterate over a range of integer values. For example, the following code will execute the indented statements once for each integer from 5 to 9:\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"c51bf6","input":"---\n**NOTES**  \n- The while statement is terminated by a colon (`:`)\n- The while condition is `pop < 1000`\n- The indented lines below the `while` statement are executed repeatedly while the condition is true  \n\n---","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"dd25bb","input":"---\n**NOTES**  \n- The `if` statement is nested within the `for` loop, so there are two levels of indentation\n- The condition of the `if` statement requires a double equal sign `==` to test for equality\n- Strings are not equal if they are of a different case, so `\"W\" == \"w\"` is not true\n\n---","pos":15,"type":"cell"}
{"id":0,"time":1607078201643,"type":"user"}
{"last_load":1606855202812,"type":"file"}