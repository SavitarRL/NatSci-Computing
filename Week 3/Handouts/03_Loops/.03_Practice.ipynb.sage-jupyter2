{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":82124800},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"208b6f","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"a44ea4","input":"s1 = \"Ben Nevis is more than 1000m\"\nvow = [\"a\", \"e\", \"i\", \"o\", \"u\"]\nfor v in vow:\n    s1 = s1.replace(v,\"_\")\nprint(s1)\ns2 = \"Ben Nevis is more than 1000m\"\nns = \"\"\nfor w in range(0,len(s2),2):\n    ns += str(s2[w])\nprint(ns)","output":{"0":{"name":"stdout","output_type":"stream","text":"B_n N_v_s _s m_r_ th_n 1000m\nBnNvsi oeta 00\n"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"147aeb","input":"#1\nfor i in range(0,8,2):\n    print(i,end=\"\")\n\nprint(\"\")\n#2\nfor i in reversed(range(5,10)):\n    print(i, end=\"\")\nprint(\"\")\n#3\nfor i in range(1,5):\n    for k in range(i):\n        print(k+1,end=\"\")\n    print(\"\")\n    \n ","output":{"0":{"name":"stdout","output_type":"stream","text":"0246\n98765\n1\n12\n123\n1234\n"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"3d5b66","input":"counter = 0\nresult = []\nx = [9999, 9.9, 10, 4356633]\nfor item in x:\n    while item > 1:\n        counter +=1\n        item=item/10\n    result.append(counter)\n    counter = 0\nprint(result)","output":{"0":{"name":"stdout","output_type":"stream","text":"[4, 1, 1, 7]\n"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"98ea57","input":"for i in range(1,11):\n    for k in range(1,11):\n        print(i*k,end=\" \")\n    print(\"\")","output":{"0":{"name":"stdout","output_type":"stream","text":"1 2 3 4 5 6 7 8 9 10 \n2 4 6 8 10 12 14 16 18 20 \n3 6 9 12 15 18 21 24 27 30 \n4 8 12 16 20 24 28 32 36 40 \n5 10 15 20 25 30 35 40 45 50 \n6 12 18 24 30 36 42 48 54 60 \n7 14 21 28 35 42 49 56 63 70 \n8 16 24 32 40 48 56 64 72 80 \n9 18 27 36 45 54 63 72 81 90 \n10 20 30 40 50 60 70 80 90 100 \n"}},"pos":4,"scrolled":true,"type":"cell"}
{"cell_type":"markdown","id":"4dcdc6","input":"## Question 2\nWrite a program which prints a multiplication table, like this:\n```\n 1  2  3  4  5  6  7  8  9 10\n 2  4  6  8 10 12 14 16 18 20\n 3  6  9 12 15 18 21 24 27 30\n...\n10 20 30 40 50 60 70 80 90 100\n```\n\nYou will need to use two nested loops.","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"538c67","input":"## Question 3\n\nThe following algorithm can be used to count the number of digits in a number:\n\n- *Set counter to 0*  \n- *Repeat the following steps while the number is greater than 1*:\n  - *increase counter value by 1*\n  - *divide the number by 10*\n- *print the final counter value*\n\nUse a `while` loop to count the number of digits in `x = 9999`, then test your code with `x = 10`, `x = 9.9` and `x = 4356633`","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"5cb9b7","input":"## Question 1\nTake a look at the following code (the `end=\"\"` argument suppresses the new lines so everything prints on one line):\n\n```\nfor i in range(5, 8):\n    print(i, end=\"\")\n\n567\n```\n\nNow write code to produce the following output:\n\n1.\n```\n0246\n```\n2.\n```\n98765\n```\n3. (You will use two for loops, one inside the other)\n```\n1\n12\n123\n1234\n```","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"781d4e","input":"# Loops\n# Practice Questions","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"d2a048","input":"## Question 4\nGiven a string `s`, write a program which prints\n\n1. The string will all vowels replaced by an underscore _\n1. Every second character in `s`\n\nE.g.:\n\n```\nB_n N_v_s _s m_r_ th_n 1000\nBnNvsi oeta 00\n```\n\n(Use `print(x, end=\"\")` to print on a single line)","pos":7,"type":"cell"}
{"id":0,"time":1607077184037,"type":"user"}
{"last_load":1607077183839,"type":"file"}